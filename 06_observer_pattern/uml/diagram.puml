@startuml

class Observable {
    -std::set<Observer*> observers
    +void registerObserver(Observer*)
    +void unregisterObserver(Observer*)
    #void notifyObservers(float)
}
note right: for(Observer* observer: observers)\n observer->notify(value);

Interface Observer {
    +void notify(float)
}

class Displacement{
    -float value
    +void set(float)
}

Observable "1" o-- "*" Observer
Observable <|-- Displacement

class Acceleration {
    -bool hasFirstValue
    -bool hasSecondValue
    -bool hasThirdValue
    -float firstValue
    -float secondValue
    -float thirdValue
    +float get()
}

Observer <|-- Acceleration
Acceleration ..>  Displacement : observes

class Speed {
    -bool hasFirstValue
    -bool hasSecondValue
    -float firstValue
    -float secondValue
    +float get()
}

Observer <|-- Speed
Speed ..>  Displacement : observes

@enduml
